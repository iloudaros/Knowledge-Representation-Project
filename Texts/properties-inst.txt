PROPERTIES

Datatype property: scientificName (string)

Datatype property: height (decimal)

Datatype property: leafSize (decimal)

Datatype property: flowerSize (decimal)

Datatype property: fruitSize (decimal)

Datatype property: leafShape (string)

Datatype property: flowerColor (string)

Datatype property: fruitColor (string)

Object property: hasLeaves (Leaf)

Object property: hasFlowers (Flower)

Object property: hasFruits (Fruit)

Object property: growsIn (Habitat)

Object property: belongsToFamily (PlantFamily)

Object property: hasScientificClassification (ScientificClassification)

Object property: hasCommonName (CommonName)

Object property: hasSynonyms (Synonym)

===========================================================================

scientificName (string) - subproperty of commonName (string)
height (decimal) - subproperty of size (decimal)
leafShape (string) - subproperty of shape (string)
flowerColor (string) - subproperty of color (string)

In this example, the properties "scientificName," "height," "leafShape," and "flowerColor" are subproperties of the properties "commonName," "size," "shape," and "color," respectively. This means that the subproperties are more specific versions of the parent properties. For example, "scientificName" is a more specific version of "commonName" that refers to the scientific name of a plant, while "height" is a more specific version of "size" that refers to the height of a plant.

=============================================================================

growsOn (Plant) - inverse of growsIn (Habitat)
isConsumedBy (Animal) - inverse of consumes (Plant)
hasParent (Plant) - inverse of isParentOf (Plant)
hasPart (Plant) - inverse of isPartOf (Plant)

In these examples, the properties "growsOn," "isConsumedBy," "hasParent," and "hasPart" are inverse properties of the properties "growsIn," "consumes," "isParentOf," and "isPartOf," respectively. For example, the property "growsOn" defines the inverse relationship between a plant and a habitat (i.e., a plant grows on a habitat rather than in it), while the property "isConsumedBy" defines the inverse relationship between a plant and an animal (i.e., an animal consumes a plant rather than being consumed by it).

===========================================================================

isSynonymOf (Plant) - symmetric property of hasSynonym (Plant)
isSimilarTo (Plant) - symmetric property of isSimilarTo (Plant)

In these examples, the properties "isSynonymOf" and "isSimilarTo" are symmetric properties because they define relationships between plants that are true in both directions. For example, if plant A is a synonym of plant B, then plant B is also a synonym of plant A. Similarly, if plant A is similar to plant B, then plant B is also similar to plant A.

==============================================================================

isDescendantOf (Plant) - transitive property of hasDescendant (Plant)
isClassifiedAs (Plant) - transitive property of hasClassification (ScientificClassification)

In these examples, the properties "isDescendantOf" and "isClassifiedAs" are transitive properties because they define relationships between plants that are true for all objects in the chain. For example, if plant A is a descendant of plant B, and plant B is a descendant of plant C, then plant A is also a descendant of plant C. Similarly, if plant A is classified as a certain scientific classification, and plant B is classified as a subclass of that classification, then plant A is also classified as a subclass of the classification of plant B.

=============================================================================

hasScientificName (string) - functional property of isScientificNameOf (Plant)
hasCommonName (string) - functional property of isCommonNameOf (Plant)

In these examples, the properties "hasScientificName" and "hasCommonName" are functional properties because they define unique relationships between a plant and a string value. For example, a plant can have at most one scientific name, and that scientific name is a unique identifier for the plant. Similarly, a plant can have at most one common name, and that common name is a common way to refer to the plant.

===========================================================================

isTypeOf (Plant) - inverse functional property of hasType (PlantType)
isGenusOf (Plant) - inverse functional property of hasGenus (PlantGenus)

In these examples, the properties "isTypeOf" and "isGenusOf" are inverse functional properties because they define unique relationships between a plant and a plant type or genus, and the inverse properties "hasType" and "hasGenus" are also functional. For example, a plant type can be associated with at most one plant, and that plant is uniquely identified by its type. Similarly, a plant genus can be associated with at most one plant, and that plant is classified within that genus.

============================================================================
INSTANCES

Plantae (Kingdom)
Chlorophyta (Phylum)
Monocots (Class)
Liliales (Order)
Liliaceae (Family)
Allium (Genus)
Allium cepa (Species)
Herb (Plant type)
Simple (Leaf type)
Smooth (Leaf margin)
Alternate (Leaf arrangement)
Single (Flower type)
White (Flower color)
Dry (Fruit type)
Brown (Fruit color)
Grassland (Habitat)
Sandy (Soil type)
Temperate (Climate)
Fungi (Kingdom)
Zygomycota (Phylum)
Dicots (Class)
Rosids (Order)
Rosaceae (Family)
Prunus (Genus)
Prunus avium (Species)
Protista (Kingdom)
Chlorophyta (Phylum)
Monocots (Class)
Asparagales (Order)
Asparagaceae (Family)
Asparagus (Genus)
Asparagus officinalis (Species)
Herb (Plant type)
Compound (Leaf type)
Lobed (Leaf margin)
Opposite (Leaf arrangement)
Single (Flower type)
Purple (Flower color)
Dry (Fruit type)
Black (Fruit color)
Desert (Habitat)
Sandy (Soil type)
Arid (Climate)
Plantae (Kingdom)
Tracheophyta (Phylum)
Monocots (Class)
Alismatales (Order)
Araceae (Family)
Arum (Genus)
Arum italicum (Species)








